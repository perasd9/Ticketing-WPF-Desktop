<UserControl x:Class="TicketingClientWPF.View.Controls.Event.UCCreateEvent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:TicketingClientWPF.Validation_rules"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="500"
             Loaded="UserControl_Loaded">


    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                    MinWidth="235" MaxWidth="350">
            
            <!--Name-->
            <TextBlock Text="Naziv"
                               Foreground="DarkGray"
                               FontSize="14"
                               FontWeight="Medium"
                               FontFamily="Montserrat"                             
                               Margin="0,35,0,0"/>
            <TextBox x:Name="txtNaziv"
                             FontSize="15"
                             FontWeight="Medium"
                             FontFamily="Montserrat"                            
                             Foreground="Black"
                             BorderBrush="#0FFF50"
                             BorderThickness="0,0,0,2.5"
                             Height="28"
                             VerticalContentAlignment="Center"
                             Margin="0,5,0,0">
                <TextBox.Text>
                    <Binding Path="Event.NazivDogadjaja" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:LengthValidationRule Length="4" ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <local:RequireValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="13" 
                                                   FontFamily="Montserrat"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>

            </TextBox>
            

            <!--Description-->
            <TextBlock Text="Opis"
                               Foreground="DarkGray"
                               FontSize="14"
                               FontWeight="Medium"
                               FontFamily="Montserrat"                             
                               Margin="0,35,0,0"/>
            <TextBox x:Name="txtOpis"
                             FontSize="15"
                             FontWeight="Medium"
                             FontFamily="Montserrat"                            
                             Foreground="Black"
                             BorderBrush="#0FFF50"
                             BorderThickness="0,0,0,2.5"
                             Height="28"
                             VerticalContentAlignment="Center"
                             Margin="0,5,0,0"
                             TextWrapping="Wrap"
                             AcceptsReturn="True">

                <TextBox.Text>
                    <Binding Path="Event.OpisDogadjaja" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:LengthValidationRule Length="6" ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <local:RequireValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="14" 
                                                   FontFamily="Montserrat"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>

            </TextBox>

            <!--Price-->
            <TextBlock Text="Cena karte"
                               Foreground="DarkGray"
                               FontSize="14"
                               FontWeight="Medium"
                               FontFamily="Montserrat"                             
                               Margin="0,35,0,0"/>
            <TextBox x:Name="txtCenaKarte"
                             FontSize="15"
                             FontWeight="Medium"
                             FontFamily="Montserrat"                            
                             Foreground="Black"
                             BorderBrush="#0FFF50"
                             BorderThickness="0,0,0,2.5"
                             Height="28"
                             VerticalContentAlignment="Center"
                             Margin="0,5,0,0">

                <TextBox.Text>
                    <Binding Path="Event.CenaKarte" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:DoubleValidationRule ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <local:RequireValidationRule ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="14" 
                                                   FontFamily="Montserrat"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>

            </TextBox>

            <!--Date of maintenance-->
            <TextBlock Text="Datum odrzavanja"
                               Foreground="DarkGray"
                               FontSize="14"
                               FontWeight="Medium"
                               FontFamily="Montserrat"                             
                               Margin="0,35,0,0"/>
            <xctk:DateTimePicker x:Name="txtDatumOdrzavanja"
                             FontSize="15"
                             FontWeight="Medium"
                             FontFamily="Montserrat"                            
                             Foreground="Black"
                             BorderBrush="#0FFF50"
                             BorderThickness="0,0,0,2.5"
                             Height="31"
                             VerticalContentAlignment="Center"
                             Margin="0,5,0,0"
                             AllowTextInput="False">
                <xctk:DateTimePicker.Resources>
                    <Style TargetType="{x:Type xctk:TimePicker}">
                        <Setter Property="AllowTextInput" Value="False"/>
                    </Style>
                    <Style TargetType="{x:Type xctk:DateTimePicker}">
                        <Setter Property="AllowTextInput" Value="False"/>
                    </Style>
                </xctk:DateTimePicker.Resources>

                <xctk:DateTimePicker.Value>
                    <Binding Path="Event.DatumOdrzavanja" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:DateAfterValidationRule ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <local:RequireValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </xctk:DateTimePicker.Value>

                <xctk:DateTimePicker.Style>
                    <Style TargetType="xctk:DateTimePicker">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="14" 
                                                   FontFamily="Montserrat"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </xctk:DateTimePicker.Style>

            </xctk:DateTimePicker>

            <!--Event type-->
            <TextBlock Text="Tip dogadjaja"
                               Foreground="DarkGray"
                               FontSize="14"
                               FontWeight="Medium"
                               FontFamily="Montserrat"                             
                               Margin="0,35,0,0"/>
            <Border BorderThickness="0, 0, 0, 2.5" BorderBrush="#0FFF50">
                <ComboBox x:Name="txtTipDogadjaja"
                          ItemsSource="{Binding EventTypes, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedEventType, UpdateSourceTrigger=PropertyChanged}"
                             FontSize="15"
                             FontWeight="Medium"
                             FontFamily="Montserrat"                            
                             Foreground="Black"
                             BorderBrush="#0FFF50"
                             BorderThickness="0"
                             Height="28"
                             VerticalContentAlignment="Center"
                             Margin="0,5,0,0">

                </ComboBox>
            </Border>

            <Button Width="120" Height="40" Margin="0,40,0,0" Foreground="white"
                    Command="{Binding CreateEventCommand}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#462AD8"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="FontSize" Value="19"/>
                        <Setter Property="FontFamily" Value="Montserrat"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="Content" Value="Kreiraj"/>
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="Opacity" Value="0.6"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#28AEED"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=txtNaziv, Path = (Validation.HasError)}" Value="False">
                            </Condition>
                                    <Condition Binding="{Binding ElementName=txtOpis, Path = (Validation.HasError)}" Value="False">
                            </Condition>
                                    <Condition Binding="{Binding ElementName=txtCenaKarte, Path = (Validation.HasError)}" Value="False">
                            </Condition>
                                    <Condition Binding="{Binding ElementName=txtDatumOdrzavanja, Path = (Validation.HasError)}" Value="False">
                            </Condition>

                        </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Setter Property="Opacity" Value="1" />
                        </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="15" Background="{TemplateBinding Background}"
                                BorderThickness="2"
                                BorderBrush="#7FFF00">
                            <ContentPresenter VerticalAlignment="Center"
                             HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>

        </StackPanel>
    </Grid>
</UserControl>
