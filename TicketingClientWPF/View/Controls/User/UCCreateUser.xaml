<UserControl x:Class="TicketingClientWPF.View.Controls.User.UCCreateUser"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TicketingClientWPF.View.Controls.User"
             xmlns:localValidate="clr-namespace:TicketingClientWPF.Validation_rules"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="800"
             Loaded="UserControl_Loaded">
    <Grid>

        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, -20, 0, 0"
                    MinWidth="260" MaxWidth="350"
                    Height="700">

            <!--JMBG-->
            <TextBlock Text="JMBG"
                       Foreground="DarkGray"
                       FontSize="14"
                       FontWeight="Medium"
                       FontFamily="Montserrat"                             
                       Margin="0,35,0,0"/>
            <TextBox x:Name="txtJMBG"
                     FontSize="15"
                     FontWeight="Medium"
                     FontFamily="Montserrat"                            
                     Foreground="Black"
                     BorderBrush="#0FFF50"
                     BorderThickness="0,0,0,2.5"
                     Height="28"
                     VerticalContentAlignment="Center"
                     Margin="0,5,0,0">

                <TextBox.Text>
                    <Binding Path="User.Jmbg" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <localValidate:LengthValidationRule Length="13" ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <localValidate:MaxLengthValidationRule Length="13" ValidationStep="RawProposedValue"
                            ValidatesOnTargetUpdated="True"/>
                            <localValidate:RequireValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="13" 
                                                   FontFamily="Montserrat"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>

            </TextBox>

            <!--Name-->
            <TextBlock Text="Ime"
                       Foreground="DarkGray"
                       FontSize="14"
                       FontWeight="Medium"
                       FontFamily="Montserrat"                             
                       Margin="0,35,0,0"/>
            <TextBox x:Name="txtIme"
                     FontSize="15"
                     FontWeight="Medium"
                     FontFamily="Montserrat"                            
                     Foreground="Black"
                     BorderBrush="#0FFF50"
                     BorderThickness="0,0,0,2.5"
                     Height="28"
                     VerticalContentAlignment="Center"
                     Margin="0,5,0,0">

                <TextBox.Text>
                    <Binding Path="User.Ime" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <localValidate:LengthValidationRule Length="3" ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <localValidate:RequireValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="13" 
                                                   FontFamily="Montserrat"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>

            </TextBox>

            <!--Surname-->
            <TextBlock Text="Prezime"
                       Foreground="DarkGray"
                       FontSize="14"
                       FontWeight="Medium"
                       FontFamily="Montserrat"                             
                       Margin="0,35,0,0"/>
            <TextBox x:Name="txtPrezime"
                     FontSize="15"
                     FontWeight="Medium"
                     FontFamily="Montserrat"                            
                     Foreground="Black"
                     BorderBrush="#0FFF50"
                     BorderThickness="0,0,0,2.5"
                     Height="28"
                     VerticalContentAlignment="Center"
                     Margin="0,5,0,0">

                <TextBox.Text>
                    <Binding Path="User.Prezime" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <localValidate:LengthValidationRule Length="4" ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <localValidate:RequireValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="13" 
                                                   FontFamily="Montserrat"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>

            </TextBox>

            <!--Email-->
            <TextBlock Text="Email"
                    Foreground="DarkGray"
                    FontSize="14"
                    FontWeight="Medium"
                    FontFamily="Montserrat"                             
                    Margin="0,35,0,0"/>
            <TextBox x:Name="txtEmail"
                    FontSize="15"
                    FontWeight="Medium"
                    FontFamily="Montserrat"                            
                    Foreground="Black"
                    BorderBrush="#0FFF50"
                    BorderThickness="0,0,0,2.5"
                    Height="28"
                    VerticalContentAlignment="Center"
                    Margin="0,5,0,0">

                <TextBox.Text>
                    <Binding Path="User.Email" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <localValidate:EmailValidationRule ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <localValidate:RequireValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="12" 
                                                   FontFamily="Montserrat"
                                                   TextWrapping="Wrap"
                                                   Margin="0, 5, 0, 5"
                                                   />
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TextBox.Style>

            </TextBox>

            <!--Password-->
            <TextBlock Text="Sifra"
                    Foreground="DarkGray"
                    FontSize="14"
                    FontWeight="Medium"
                    FontFamily="Montserrat"                             
                    Margin="0,35,0,0"/>


            <PasswordBox x:Name="txtLozinka"
                             FontSize="15"
                             FontWeight="Medium"
                             FontFamily="Montserrat"                            
                             Foreground="Black"
                             BorderBrush="#0FFF50"
                             BorderThickness="0,0,0,2.5"
                             Height="28"
                             VerticalContentAlignment="Center"
                             Margin="0,5,0,0" PasswordChanged="txtLozinka_PasswordChanged" >
            </PasswordBox>
            <TextBlock x:Name="txtPasswordError"
                Foreground="Red" Text=""
                       FontSize="13" 
                       FontFamily="Montserrat"
                       TextWrapping="Wrap"
                       Margin="0, 5, 0, -20"/>


            <!--Date of birth-->
            <TextBlock Text="Datum rodjenja"
                       Foreground="DarkGray"
                       FontSize="14"
                       FontWeight="Medium"
                       FontFamily="Montserrat"                             
                       Margin="0,35,0,0"/>
            <DatePicker x:Name="txtDatumRodjenja"
                     FontSize="20"
                     FontWeight="Medium"
                     FontFamily="Montserrat"                            
                     Foreground="Black"
                     BorderBrush="#0FFF50"
                     BorderThickness="0,0,0,2.5"
                     Height="31"
                     VerticalContentAlignment="Center"
                     Margin="0,5,0,0">
                <DatePicker.Resources>
                    <Style TargetType="Button">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Height" Value="26"/>
                    </Style>
                    <Style TargetType="DatePickerTextBox">
                        <Setter Property="IsReadOnly" Value="true"/>
                    </Style>
                </DatePicker.Resources>

                <DatePicker.SelectedDate>
                    <Binding Path="User.DatumRodjenja" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <localValidate:DateBeforeValidationRule ValidationStep="RawProposedValue"
                                                        ValidatesOnTargetUpdated="True"/>
                            <localValidate:RequireValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </DatePicker.SelectedDate>

                <DatePicker.Style>
                    <Style TargetType="DatePicker">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Vertical">
                                            <AdornedElementPlaceholder/>
                                        <TextBlock Text="{Binding ErrorContent}"
                                                   Foreground="Red" 
                                                   FontSize="14" 
                                                   FontFamily="Montserrat"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DatePicker.Style>

            </DatePicker>

            <!--Place-->
            <TextBlock Text="Mesto"
                       Foreground="DarkGray"
                       FontSize="14"
                       FontWeight="Medium"
                       FontFamily="Montserrat"                             
                       Margin="0,35,0,0"/>
            <Border BorderThickness="0, 0, 0, 2.5"
                    BorderBrush="#0FFF50">
                <ComboBox x:Name="txtMesto"
                        FontSize="15"
                        FontWeight="Medium"
                        FontFamily="Montserrat"                            
                        Foreground="Black"
                        BorderThickness="0"
                        Height="28"
                        VerticalContentAlignment="Center"
                        Margin="0,5,0,0"
                    SelectedItem="{Binding SelectedPlace, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Places, UpdateSourceTrigger=PropertyChanged}">

                </ComboBox>
            </Border>

            <Button Width="120" Height="40" Margin="0,40,0,0" Foreground="white"
                    Command="{Binding CreateUserCommand}">
                <Button.CommandParameter>
                    <Binding ElementName="txtLozinka" UpdateSourceTrigger="PropertyChanged"/>
                </Button.CommandParameter>

                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#462AD8"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="FontSize" Value="19"/>
                        <Setter Property="FontFamily" Value="Montserrat"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="Content" Value="Kreiraj"/>
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="Opacity" Value="0.6"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#28AEED"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=txtJMBG, Path = (Validation.HasError)}" Value="False">
                                    </Condition>
                                    <Condition Binding="{Binding ElementName=txtIme, Path = (Validation.HasError)}" Value="False">
                                    </Condition>
                                    <Condition Binding="{Binding ElementName=txtPrezime, Path = (Validation.HasError)}" Value="False">
                                    </Condition>
                                    <Condition Binding="{Binding ElementName=txtEmail, Path = (Validation.HasError)}" Value="False">
                                    </Condition>
                                    <Condition Binding="{Binding ElementName=txtPasswordError, Path = (TextBlock.Text)}" Value="">
                                    </Condition>
                                    <Condition Binding="{Binding ElementName=txtDatumRodjenja, Path = (Validation.HasError)}" Value="False">
                                    </Condition>

                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                                <Setter Property="Opacity" Value="1" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="15" Background="{TemplateBinding Background}"
                                BorderThickness="2"
                                BorderBrush="#7FFF00">
                            <ContentPresenter VerticalAlignment="Center"
                             HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>

            </Button>

        </StackPanel>

    </Grid>
</UserControl>
